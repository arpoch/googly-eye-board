{"version":3,"sources":["components/Title.jsx","model/SidebarStateStore.jsx","components/GooglyEye.jsx","viewmodel/CanvasViewModel.js","viewmodel/PenViewModel.js","components/Pen.jsx","viewmodel/EraserViewModel.js","components/Eraser.jsx","viewmodel/BackgroundViewModel.js","components/Background.jsx","viewmodel/SelectionViewModel.js","components/Selection.jsx","components/Sidebar.jsx","components/Layout.jsx","model/CanvasStateStore.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Title","actions","initialState","Pen","isPenClicked","Eraser","isEraserClicked","properties","arcRadius","Background","isBackgroundClicked","Select","isSelected","reducer","state","action","type","payload","SidebarContext","React","createContext","SidebarStateStore","children","useReducer","dispatch","value","states","handlePenClick","handleEraserClick","handleBackgroundClick","handleSelection","handleEraserProperties","radius","Provider","GooglyEye","sidebarContext","useContext","useState","x","y","eyePosition","setEyePosition","isPressed","setIsPressed","getX","clientX","window","innerWidth","getY","clientY","innerHeight","useEffect","controller","AbortController","addEventListener","e","signal","abort","className","onMouseMove","target","currentTarget","style","top","left","onMouseDown","border","cursor","onMouseUp","CanvasViewModel","canvas","nativeEvent","penDraw","isDrawing","lineTo","offsetX","offsetY","stroke","eraser","isErasing","console","log","arc","Math","PI","beginPath","moveTo","closePath","globalCompositionOperation","PenViewModel","context","canvasViewModel","this","setPenProperties","width","cap","strokeStyle","lineWidth","defaultPenProperties","startDrawing","getPenClick","stopDrawing","penViewModel","title","size","onClick","EraserViewModel","setEraserProperties","fillStyle","startErasing","getEraserClick","stopErasing","eraserViewModel","BackgroundViewModel","backgroundViewModel","handleIconClick","getIconClick","addBackground","SelectionViewModel","Selection","selectViewModel","Sidebar","Layout","initState","Canvas","CanvasContext","CanvasStateStore","getCanvas","App","ref","useRef","setCanvas","useMemo","canvasRef","useCallback","current","height","getContext","position","handleMouseMoves","handleMouseDown","handleMouseUp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c468a7d7.chunk.js","sourcesContent":["import './Title.css'\r\nfunction Title() {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"title\">\r\n                Googly Eyed\r\n            </div>\r\n            <div className=\"word\">\r\n                <input className=\"box\" placeholder=\".   .   .\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;","import React, {useReducer} from \"react\";\r\n\r\nconst actions = {\r\n    PEN:\"PEN\",\r\n    ERASER:\"ERASER\",\r\n    ERASER_PROPERTIES: \"ERASER_PROPERTIES\",\r\n    BACKGROUND: \"BACKGROUND\",\r\n    SELECT: \"SELECT\",\r\n}\r\n\r\n//Can create separate objs for each item\r\nconst initialState = {\r\n    Pen: {\r\n        isPenClicked:false,\r\n    },\r\n    Eraser: {\r\n        isEraserClicked:false,\r\n        properties: {\r\n            arcRadius: 5,\r\n        }\r\n    },\r\n    Background: {\r\n        isBackgroundClicked: false,\r\n    },\r\n    Select: {\r\n        isSelected: false,\r\n    }\r\n}\r\n\r\nfunction reducer(state,action){\r\n    switch (action.type){\r\n        case actions.PEN:\r\n            return {\r\n                ...state,\r\n                Pen:{\r\n                    ...state.Pen,\r\n                    isPenClicked: !state.Pen.isPenClicked\r\n                },\r\n                Eraser: {\r\n                    ...state.Eraser,\r\n                    isEraserClicked: false\r\n                },\r\n                Background: {\r\n                    ...state.Background,\r\n                    isBackgroundClicked: false,\r\n                },\r\n                Select:{\r\n                    isSelected: false,\r\n                },\r\n            };\r\n\r\n        case actions.ERASER:\r\n            return {\r\n                ...state,\r\n                Eraser: {\r\n                    ...state.Eraser,\r\n                    isEraserClicked: !state.Eraser.isEraserClicked\r\n                },\r\n                Pen:{\r\n                    ...state.Pen,\r\n                    isPenClicked: false\r\n                },\r\n                Background: {\r\n                    ...state.Background,\r\n                    isBackgroundClicked: false,\r\n                },\r\n                Select:{\r\n                    isSelected: false,\r\n                },\r\n            };\r\n\r\n        case actions.BACKGROUND:\r\n            return {\r\n                ...state,\r\n                Background: {\r\n                    ...state.Background,\r\n                    isBackgroundClicked: !state.Background.isBackgroundClicked,\r\n                },\r\n                Eraser: {\r\n                    ...state.Eraser,\r\n                    isEraserClicked: false,\r\n                },\r\n                Pen:{\r\n                    ...state.Pen,\r\n                    isPenClicked: false,\r\n                },\r\n                Select:{\r\n                    isSelected: false,\r\n                },\r\n            };\r\n\r\n        case actions.SELECT:\r\n            return {\r\n                ...state,\r\n                Select:{\r\n                    isSelected: !state.Select.isSelected,\r\n                },\r\n                Background: {\r\n                    ...state.Background,\r\n                    isBackgroundClicked: false,\r\n                },\r\n                Eraser: {\r\n                    ...state.Eraser,\r\n                    isEraserClicked: false,\r\n                },\r\n                Pen:{\r\n                    ...state.Pen,\r\n                    isPenClicked: false,\r\n                }\r\n            };\r\n        case actions.ERASER_PROPERTIES:\r\n            return {\r\n                ...state,\r\n                Eraser: {\r\n                    ...state.Eraser,\r\n                    properties:{\r\n                        arcRadius: action.payload,\r\n                    }\r\n                }\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst SidebarContext = React.createContext();\r\n\r\nfunction SidebarStateStore({children}){\r\n    const [state,dispatch] = useReducer(reducer,initialState);\r\n    const value = {\r\n        states: state,\r\n        handlePenClick:()=>{\r\n            dispatch({type: actions.PEN});\r\n        },\r\n        handleEraserClick:()=>{\r\n            dispatch({type:actions.ERASER});\r\n        },\r\n        handleBackgroundClick:()=>{\r\n            dispatch({type:actions.BACKGROUND});\r\n        },\r\n        handleSelection: ()=>{\r\n            dispatch({type:actions.SELECT});\r\n        },\r\n        handleEraserProperties: (radius)=>{\r\n          dispatch({type:actions.ERASER_PROPERTIES ,payload:radius})\r\n        }\r\n    };\r\n\r\n    return(\r\n        <SidebarContext.Provider value={value}>\r\n            {children}\r\n        </SidebarContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nexport default SidebarStateStore;\r\nexport {SidebarContext};","import './GooglyEye.css';\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {SidebarContext} from \"../model/SidebarStateStore\";\r\n\r\nfunction GooglyEye(){\r\n\r\n    const sidebarContext = useContext(SidebarContext);\r\n    const [eyePosition,setEyePosition]=useState({x: \"\", y:\"\"});\r\n    const [isPressed,setIsPressed] = useState(false);\r\n\r\n    function selectEyeball(e){\r\n        if(sidebarContext.states.Select.isSelected) {\r\n            const target = e.currentTarget;\r\n            target.style.border = \"1px solid red\";\r\n            target.style.cursor = \"move\";\r\n            setIsPressed( true);\r\n        }\r\n    }\r\n\r\n    function dragEyeball(e){\r\n        if(isPressed && sidebarContext.states.Select.isSelected) {\r\n            const target = e.currentTarget;\r\n            target.style.top = e.clientY + \"px\";\r\n            target.style.left = e.clientX + \"px\";\r\n        }\r\n    }\r\n\r\n    function dropEyeball(e){\r\n        if(sidebarContext.states.Select.isSelected) {\r\n            const target = e.currentTarget;\r\n            target.style.border = \"\";\r\n            target.style.cursor = \"default\";\r\n            setIsPressed(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const controller = new AbortController();\r\n        window.addEventListener(\"mousemove\", (e) =>\r\n            setEyePosition({x:getX(e.clientX), y:getY(e.clientY)}),\r\n            {signal: controller.signal}\r\n        );\r\n        return controller.abort();\r\n    },[]);\r\n\r\n    function getX(clientX) {\r\n        if ((clientX * 100 / window.innerWidth) < 20) {\r\n            return 20 + \"%\";\r\n        } else if ((clientX * 100 / window.innerWidth) > 80) {\r\n            return 80 + \"%\";\r\n        } else {\r\n            return clientX * 100 / window.innerWidth + '%';\r\n        }\r\n    }\r\n\r\n    function getY(clientY) {\r\n        if ((clientY * 100 / window.innerHeight) < 20) {\r\n            return 20 + \"%\";\r\n        } else if ((clientY * 100 / window.innerHeight) > 80) {\r\n            return 80 + \"%\";\r\n        } else {\r\n            return clientY * 100 / window.innerHeight + '%';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\"eye-container\"}\r\n             onMouseMove={dragEyeball}\r\n             onMouseDown={selectEyeball}\r\n             onMouseUp={dropEyeball}\r\n        >\r\n            <div className=\"Eye-ball\" >\r\n                <div className=\"Irs\" style= {{ left: eyePosition.x, top: eyePosition.y }}>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default GooglyEye;\r\n","\r\nclass CanvasViewModel{\r\n\r\n    static canvas = null;\r\n    static penDraw = false;\r\n    static isDrawing = false;\r\n    static eraser = false;\r\n    static isErasing = false;\r\n\r\n    constructor(canvas) {\r\n        CanvasViewModel.canvas = canvas;\r\n    }\r\n\r\n    handleMouseMoves({nativeEvent}){\r\n        if(CanvasViewModel.penDraw && CanvasViewModel.isDrawing) {\r\n            CanvasViewModel.canvas.lineTo(nativeEvent.offsetX, nativeEvent.offsetY);\r\n            CanvasViewModel.canvas.stroke();\r\n        }else if(CanvasViewModel.eraser && CanvasViewModel.isErasing){\r\n            console.log(\"Move \"+nativeEvent.offsetX+\" \"+nativeEvent.offsetY);\r\n            CanvasViewModel.canvas.arc(nativeEvent.offsetX, nativeEvent.offsetY ,10,0,2*Math.PI);\r\n            //CanvasViewModel.canvas.fill();\r\n            //CanvasViewModel.canvas.lineTo(nativeEvent.offsetX, nativeEvent.offsetY);\r\n            CanvasViewModel.canvas.stroke();\r\n        }\r\n    }\r\n\r\n    handleMouseDown({nativeEvent}){\r\n        if(CanvasViewModel.penDraw) {\r\n            console.log(\"Down\");\r\n            CanvasViewModel.isDrawing = true;\r\n            CanvasViewModel.canvas.beginPath();\r\n            CanvasViewModel.canvas.moveTo(nativeEvent.offsetX, nativeEvent.offsetY);\r\n        }else if(CanvasViewModel.eraser){\r\n            console.log(\"Down \"+nativeEvent.offsetX+\" \"+nativeEvent.offsetY);\r\n            CanvasViewModel.isErasing = true;\r\n            CanvasViewModel.canvas.beginPath();\r\n            CanvasViewModel.canvas.moveTo(nativeEvent.offsetX, nativeEvent.offsetY);\r\n\r\n        }\r\n    }\r\n\r\n    handleMouseUp({nativeEvent}){\r\n        if(CanvasViewModel.penDraw) {\r\n            console.log(\"Up\");\r\n            CanvasViewModel.isDrawing = false;\r\n            CanvasViewModel.canvas.closePath();\r\n        }else if (CanvasViewModel.eraser){\r\n            CanvasViewModel.isErasing = false;\r\n            CanvasViewModel.canvas.closePath();\r\n        }\r\n    }\r\n\r\n    set setCanvas(canvas){\r\n        CanvasViewModel.canvas = canvas;\r\n    }\r\n\r\n    get getCanvas(){\r\n        return CanvasViewModel.canvas;\r\n    }\r\n\r\n    startDrawing(value){\r\n        CanvasViewModel.penDraw = value;\r\n    }\r\n\r\n    stopDrawing(value){\r\n        CanvasViewModel.penDraw = value;\r\n    }\r\n\r\n    startErasing(value){\r\n        CanvasViewModel.canvas.globalCompositionOperation = 'destination-out';\r\n        CanvasViewModel.eraser = value;\r\n    }\r\n\r\n    stopErasing(value){\r\n        CanvasViewModel.canvas.globalCompositionOperation = 'source-over';\r\n        CanvasViewModel.eraser = value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CanvasViewModel;","import CanvasViewModel from \"./CanvasViewModel\";\r\n\r\nclass PenViewModel{\r\n\r\n    context = null;\r\n    canvasViewModel = null;\r\n\r\n    constructor(context,canvasViewModel) {\r\n        this.context = context;\r\n        this.canvasViewModel = canvasViewModel;\r\n    }\r\n\r\n    handlePenClick(){\r\n        this.context.handlePenClick();\r\n    }\r\n\r\n    getPenClick(){\r\n        return this.context.states.Pen.isPenClicked;\r\n    }\r\n\r\n    defaultPenProperties(){\r\n        this.setPenProperties(\"black\",0.7,\"round\");\r\n    }\r\n\r\n    setPenProperties(stroke,width,cap){\r\n        const canvas = CanvasViewModel.canvas;\r\n        if(canvas==null) {\r\n            console.log(\"Canvas not initialized\");\r\n            return;\r\n        }\r\n        //TODO Separation of Concerns\r\n        canvas.strokeStyle = stroke;\r\n        canvas.lineWidth = width;\r\n        canvas.cap = cap;\r\n    }\r\n\r\n    startDrawing(){\r\n        this.defaultPenProperties();\r\n        this.canvasViewModel.startDrawing(this.getPenClick());\r\n    }\r\n\r\n    stopDrawing(){\r\n        this.canvasViewModel.stopDrawing(this.getPenClick());\r\n    }\r\n}\r\n\r\nexport default PenViewModel;","import {IconContext} from \"react-icons\";\r\nimport {BsPen, BsPenFill} from \"react-icons/bs\";\r\nimport {useContext} from \"react\";\r\nimport PenViewModel from \"../viewmodel/PenViewModel\"\r\nimport {SidebarContext} from \"../model/SidebarStateStore\";\r\n\r\nfunction Pen({canvasViewModel}){\r\n    //TODO Optimise the re-rendering of context\r\n    const sidebarContext = useContext(SidebarContext);\r\n    const penViewModel = new PenViewModel(sidebarContext,canvasViewModel);\r\n\r\n    function handleClick(){\r\n        penViewModel.handlePenClick();\r\n    }\r\n\r\n    function setDisplayIcon(){\r\n        if(penViewModel.getPenClick()){\r\n            penViewModel.startDrawing();\r\n            return <BsPenFill/>\r\n        } else {\r\n            penViewModel.stopDrawing();\r\n            return <BsPen/>\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <IconContext.Provider value={{title: \"Pen\", size: \"2.3em\", className: 'react-icons'}}>\r\n                <button onClick={handleClick}>{setDisplayIcon()}</button>\r\n            </IconContext.Provider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pen;","import CanvasViewModel from \"./CanvasViewModel\";\r\n\r\nclass EraserViewModel{\r\n\r\n    context = null;\r\n    canvasViewModel = null;\r\n\r\n    constructor(context,canvasViewModel) {\r\n        this.context = context;\r\n        this.canvasViewModel = canvasViewModel;\r\n    }\r\n\r\n    handleEraserClick(){\r\n        this.context.handleEraserClick();\r\n    }\r\n\r\n    getEraserClick(){\r\n        return this.context.states.Eraser.isEraserClicked;\r\n    }\r\n\r\n    defaultPenProperties(){\r\n        this.setEraserProperties(10);\r\n    }\r\n\r\n    setEraserProperties(radius){\r\n        const canvas = CanvasViewModel.canvas;\r\n        if(canvas==null) {\r\n            console.log(\"Canvas not initialized\");\r\n            return;\r\n        }\r\n        //TODO Separation of Concerns\r\n        canvas.strokeStyle = \"white\";\r\n        canvas.lineWidth = 3;\r\n        canvas.fillStyle = \"white\";\r\n        //this.context.states.handleEraserProperties(radius);\r\n    }\r\n\r\n    startErasing(){\r\n        this.defaultPenProperties();\r\n        this.canvasViewModel.startErasing(this.getEraserClick());\r\n    }\r\n\r\n    stopErasing(){\r\n        this.canvasViewModel.stopErasing(this.getEraserClick());\r\n    }\r\n}\r\n\r\nexport default EraserViewModel;","import {SidebarContext} from \"../model/SidebarStateStore\";\r\nimport {useContext} from \"react\";\r\nimport {RiEraserLine, RiEraserFill} from 'react-icons/ri';\r\nimport {IconContext} from \"react-icons\";\r\nimport EraserViewModel from \"../viewmodel/EraserViewModel\";\r\n\r\n\r\nfunction Eraser({canvasViewModel}){\r\n    //TODO Optimise the re-rendering of context\r\n    const sidebarContext = useContext(SidebarContext)\r\n    const eraserViewModel = new EraserViewModel(sidebarContext,canvasViewModel);\r\n\r\n    function handleClick(){\r\n        eraserViewModel.handleEraserClick();\r\n    }\r\n\r\n    function setDisplayIcon(){\r\n        if(eraserViewModel.getEraserClick()) {\r\n            eraserViewModel.startErasing();\r\n            return <RiEraserFill />\r\n        }\r\n        else {\r\n            eraserViewModel.stopErasing();\r\n            return <RiEraserLine />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IconContext.Provider value={{size: \"2.3em\", className: 'react-icons'}}>\r\n                <button onClick={handleClick}>{setDisplayIcon()}</button>\r\n            </IconContext.Provider>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Eraser;","\r\nclass BackgroundViewModel{\r\n\r\n    context = null;\r\n    canvasViewModel = null;\r\n\r\n    constructor(context,canvasViewModel) {\r\n        this.context = context;\r\n        this.canvasViewModel = canvasViewModel;\r\n    }\r\n\r\n    handleIconClick(){\r\n        this.context.handleBackgroundClick();\r\n    }\r\n\r\n    getIconClick(){\r\n        return this.context.states.Background.isBackgroundClicked;\r\n    }\r\n\r\n    addBackground(){\r\n\r\n    }\r\n}\r\n\r\nexport default BackgroundViewModel;","import {useContext} from \"react\";\r\nimport {IconContext} from \"react-icons\";\r\nimport BackgroundViewModel from \"../viewmodel/BackgroundViewModel\";\r\nimport {SidebarContext} from \"../model/SidebarStateStore\";\r\nimport {BsImage, BsImageFill} from \"react-icons/all\";\r\nimport penViewModel from \"../viewmodel/PenViewModel\";\r\n\r\n\r\nconst Background = ({canvasViewModel}) => {\r\n\r\n    // const [image, setImage] = useState(() => {\r\n    //     const image = new Image();\r\n    //     image.src = beach;\r\n    //     return image;\r\n    // });\r\n    // const image = new Image(0,0);\r\n    // image.src = beach;\r\n    // window.onload =()=>{\r\n    //     if(image.src.length!=0)\r\n    //         canvasContent.current.drawImage(image,0,0,);\r\n    //     else\r\n    //         console.log(\"ok\")\r\n    // }\r\n\r\n    // function handleImage() {\r\n    //     setImage(image => {\r\n    //         console.log(image);\r\n    //     });\r\n    // }\r\n    //\r\n    // useEffect(() => {\r\n    //     if(!image.complete){\r\n    //         image.onload = () =>{\r\n    //             canvasContent.current.drawImage(image, 0, 0, window.innerWidth, window.innerHeight);\r\n    //         }\r\n    //     }else{\r\n    //         canvasContent.current.drawImage(image, 0, 0, window.innerWidth, window.innerHeight);\r\n    //     }\r\n    // }, [image]);\r\n    const sidebarContext = useContext(SidebarContext);\r\n    const backgroundViewModel = new BackgroundViewModel(sidebarContext,canvasViewModel);\r\n\r\n    function handleClick(){\r\n        backgroundViewModel.handleIconClick();\r\n    }\r\n\r\n    function setDisplayIcon(){\r\n        if(backgroundViewModel.getIconClick()){\r\n            backgroundViewModel.addBackground();\r\n            return <BsImageFill />\r\n        } else {\r\n            return <BsImage />\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <IconContext.Provider value={{title: \"Pen\", size: \"2.3em\", className: 'react-icons'}}>\r\n                <button onClick={handleClick}>{setDisplayIcon()}</button>\r\n            </IconContext.Provider>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Background;","\r\nclass SelectionViewModel{\r\n\r\n    context = null;\r\n    canvasViewModel = null;\r\n\r\n    constructor(context,canvasViewModel) {\r\n        this.context = context;\r\n        this.canvasViewModel = canvasViewModel;\r\n    }\r\n\r\n    handleIconClick(){\r\n       this.context.handleSelection();\r\n    }\r\n\r\n    getIconClick(){\r\n      return this.context.states.Select.isSelected;\r\n    }\r\n\r\n    addBackground(){\r\n\r\n    }\r\n}\r\n\r\nexport default SelectionViewModel;","import {IconContext} from \"react-icons\";\r\nimport {useContext} from \"react\";\r\nimport {SidebarContext} from \"../model/SidebarStateStore\";\r\nimport {GiArrowCursor, GrCursor} from \"react-icons/all\";\r\nimport SelectionViewModel from \"../viewmodel/SelectionViewModel\";\r\n\r\nfunction Selection({canvasViewModel}){\r\n    //TODO Optimise the re-rendering of context\r\n    const sidebarContext = useContext(SidebarContext);\r\n    const selectViewModel = new SelectionViewModel(sidebarContext,canvasViewModel);\r\n\r\n    function handleClick(){\r\n        selectViewModel.handleIconClick();\r\n    }\r\n\r\n    function setDisplayIcon(){\r\n        if(selectViewModel.getIconClick()){\r\n            return <GiArrowCursor/>\r\n        } else {\r\n            return <GrCursor/>\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <IconContext.Provider value={{title: \"Pen\", size: \"2.3em\", className: 'react-icons'}}>\r\n                <button onClick={handleClick}>{setDisplayIcon()}</button>\r\n            </IconContext.Provider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Selection;","import \"./Sidebar.css\";\r\nimport Pen from \"./Pen\";\r\nimport Eraser from \"./Eraser\";\r\nimport Background from \"./Background\";\r\nimport Selection from \"./Selection\";\r\nimport {useState} from \"react\";\r\nimport {IconContext} from \"react-icons\";\r\nimport {AiOutlineArrowDown, AiOutlineArrowUp} from \"react-icons/all\";\r\n\r\nconst Sidebar = ({canvasViewModel}) => {\r\n\r\n    const [isSidebarHidden, setIsSidebarHidden] = useState(false);\r\n\r\n    function hideSideBar(){\r\n        const closeBtn = document.getElementsByClassName(\"sidebar\");\r\n        if(closeBtn[0]!==undefined){\r\n            closeBtn[0].style.bottom='-45px';\r\n        }\r\n    }\r\n\r\n    function showSidebar(){\r\n        const closeBtn = document.getElementsByClassName(\"sidebar\");\r\n        if(closeBtn[0]!==undefined){\r\n            closeBtn[0].style.bottom='0px';\r\n        }\r\n    }\r\n\r\n    function handleClick() {\r\n        setIsSidebarHidden(!isSidebarHidden);\r\n    }\r\n\r\n    function showIcon() {\r\n        if (isSidebarHidden) {\r\n            hideSideBar();\r\n            return <AiOutlineArrowUp/>\r\n        } else {\r\n            showSidebar();\r\n            return <AiOutlineArrowDown/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <div className='sidebar'>\r\n                <div className=\"sidebar-container\">\r\n                    <div className=\"sidebar-item\">\r\n                        <Pen canvasViewModel={canvasViewModel}/>\r\n                    </div>\r\n                    <div className=\"sidebar-item\">\r\n                        <Eraser canvasViewModel={canvasViewModel}/>\r\n                    </div>\r\n                    <div className=\"sidebar-item\">\r\n                        <Background canvasViewModel={canvasViewModel}/>\r\n                    </div>\r\n                    <div className=\"sidebar-item\">\r\n                        <Selection canvasViewModel={canvasViewModel}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/*<IconContext.Provider value={{size: \"2.3em\", className: 'react-icons'}}>*/}\r\n            {/*    <button onClick={handleClick}>{showIcon()}</button>*/}\r\n            {/*</IconContext.Provider>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import Title from \"./Title\";\r\nimport GooglyEye from \"./GooglyEye\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport SidebarStateStore from \"../model/SidebarStateStore\";\r\n\r\nfunction Layout({canvasViewModel}) {\r\n\r\n    // imageUrl={()=>{const image = new Image(); image.src=\"../assets/celebrations.jpg\"; return image }}4\r\n    return (\r\n        <>\r\n            {/*<Title/>*/}\r\n            <SidebarStateStore>\r\n                <GooglyEye/>\r\n                <Sidebar canvasViewModel={canvasViewModel}/>\r\n            </SidebarStateStore>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Layout;","import React, {useReducer} from \"react\";\r\n\r\nconst actions = {\r\n    GET_CANVAS: \"CANVAS\",\r\n}\r\n\r\nconst initState = {\r\n    Canvas:{\r\n        canvas: null,\r\n    }\r\n}\r\n\r\nfunction reducer(state,action){\r\n    switch (action.type){\r\n        case actions.GET_CANVAS:\r\n            if(state.Canvas.canvas!=null){\r\n                return {\r\n                    Canvas: {\r\n                        canvas: action.payload,\r\n                    }\r\n                };\r\n            }\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst CanvasContext = React.createContext();\r\n\r\nfunction CanvasStateStore({children}){\r\n    const [state,dispatch] = useReducer(reducer,initState);\r\n    const value={\r\n        state,\r\n        getCanvas:(canvas)=>{\r\n            dispatch({type: actions.GET_CANVAS, payload: canvas});\r\n        }\r\n    };\r\n\r\n    return (\r\n      <CanvasContext.Provider value={value}>\r\n          {children}\r\n      </CanvasContext.Provider>\r\n    );\r\n}\r\n\r\nexport default CanvasStateStore;\r\nexport {CanvasContext};","import React, {useCallback, useContext, useMemo, useRef, useState} from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport CanvasViewModel from \"../viewmodel/CanvasViewModel\";\r\nimport \"./App.css\"\r\nimport CanvasStateStore from \"../model/CanvasStateStore\";\r\n\r\nfunction App() {\r\n\r\n    const ref = useRef(null);\r\n    const [canvas,setCanvas]=useState(null);\r\n    const canvasViewModel = useMemo(()=>new CanvasViewModel(canvas),[canvas]);\r\n\r\n    console.log(\"creating\")\r\n\r\n    const canvasRef = useCallback((current)=>{\r\n        if(current!=null && ref.current!==current) {\r\n            console.log(\"Rendered\")\r\n            ref.current = current;\r\n            current.width = window.innerWidth;\r\n            current.height = window.innerHeight;\r\n            const context = current.getContext('2d');\r\n            setCanvas(context);\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <canvas\r\n                className=\"canvas\"\r\n                ref={canvasRef}\r\n                style={{position: \"absolute\" }}\r\n                onMouseMove={canvasViewModel.handleMouseMoves}\r\n                onMouseDown={canvasViewModel.handleMouseDown}\r\n                onMouseUp={canvasViewModel.handleMouseUp}\r\n            />\r\n            {(canvas!=null)\r\n                ?\r\n                <CanvasStateStore>\r\n                    <Layout canvasViewModel={canvasViewModel}/>\r\n                </CanvasStateStore>\r\n                :\r\n                <h1>Null</h1>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}