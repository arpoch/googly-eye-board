{"version":3,"sources":["components/Title.jsx","model/SidebarStateStore.jsx","components/GooglyEye.jsx","viewmodel/CanvasViewModel.js","viewmodel/PenViewModel.js","components/Pen.jsx","viewmodel/EraserViewModel.js","components/Eraser.jsx","viewmodel/BackgroundViewModel.js","components/Background.jsx","viewmodel/SelectionViewModel.js","components/Selection.jsx","components/Sidebar.jsx","components/Layout.jsx","model/CanvasStateStore.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Title","className","placeholder","actions","initialState","Pen","isPenClicked","Eraser","isEraserClicked","Background","isBackgroundClicked","Select","isSelected","reducer","state","action","type","SidebarContext","React","createContext","SidebarStateStore","children","useReducer","dispatch","value","states","handlePenClick","handleEraserClick","handleBackgroundClick","handleSelection","Provider","GooglyEye","sidebarContext","useContext","useState","x","y","eyePosition","setEyePosition","handleMouseEvent","e","getX","clientX","getY","clientY","window","innerWidth","innerHeight","useEffect","addEventListener","removeEventListener","onClick","style","left","top","CanvasViewModel","canvas","nativeEvent","penDraw","isDrawing","lineTo","offsetX","offsetY","stroke","console","log","beginPath","moveTo","closePath","PenViewModel","context","canvasViewModel","this","setPenProperties","width","cap","strokeStyle","defaultPenProperties","startDrawing","getPenClick","stopDrawing","penViewModel","title","size","EraserViewModel","eraserViewModel","getEraserClick","BackgroundViewModel","backgroundViewModel","handleIconClick","getIconClick","addBackground","SelectionViewModel","Selection","selectViewModel","Sidebar","Layout","initState","Canvas","payload","CanvasContext","CanvasStateStore","getCanvas","App","ref","useRef","setCanvas","useMemo","canvasRef","useCallback","current","height","getContext","position","onMouseMove","handleMouseMoves","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5787de02.chunk.js","sourcesContent":["import './Title.css'\r\nfunction Title() {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"title\">\r\n                Googly Eyed\r\n            </div>\r\n            <div className=\"word\">\r\n                <input className=\"box\" placeholder=\".   .   .\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;","import React, {useReducer} from \"react\";\r\n\r\nconst actions = {\r\n    PEN:\"PEN\",\r\n    ERASER:\"ERASER\",\r\n    BACKGROUND: \"BACKGROUND\",\r\n    SELECT: \"SELECT\",\r\n}\r\n\r\n//Can create separate objs for each item\r\nconst initialState = {\r\n    Pen: {\r\n        isPenClicked:false,\r\n    },\r\n    Eraser: {\r\n        isEraserClicked:false,\r\n    },\r\n    Background: {\r\n        isBackgroundClicked: false,\r\n    },\r\n    Select: {\r\n        isSelected: false,\r\n    }\r\n}\r\n\r\nfunction reducer(state,action){\r\n    switch (action.type){\r\n        case actions.PEN:\r\n            return {\r\n                ...state,\r\n                Pen:{\r\n                    ...state.Pen,\r\n                    isPenClicked: !state.Pen.isPenClicked\r\n                },\r\n                Eraser: {\r\n                    ...state.Eraser,\r\n                    isEraserClicked: false\r\n                },\r\n                Background: {\r\n                    ...state.Background,\r\n                    isBackgroundClicked: false,\r\n                },\r\n                Select:{\r\n                    isSelected: false,\r\n                },\r\n            };\r\n\r\n        case actions.ERASER:\r\n            return {\r\n                ...state,\r\n                Eraser: {\r\n                    ...state.Eraser,\r\n                    isEraserClicked: !state.Eraser.isEraserClicked\r\n                },\r\n                Pen:{\r\n                    ...state.Pen,\r\n                    isPenClicked: false\r\n                },\r\n                Background: {\r\n                    ...state.Background,\r\n                    isBackgroundClicked: false,\r\n                },\r\n                Select:{\r\n                    isSelected: false,\r\n                },\r\n            };\r\n\r\n        case actions.BACKGROUND:\r\n            return {\r\n                ...state,\r\n                Background: {\r\n                    ...state.Background,\r\n                    isBackgroundClicked: !state.Background.isBackgroundClicked,\r\n                },\r\n                Eraser: {\r\n                    ...state.Eraser,\r\n                    isEraserClicked: false,\r\n                },\r\n                Pen:{\r\n                    ...state.Pen,\r\n                    isPenClicked: false,\r\n                },\r\n                Select:{\r\n                    isSelected: false,\r\n                },\r\n            };\r\n\r\n        case actions.SELECT:\r\n            return {\r\n                ...state,\r\n                Select:{\r\n                    isSelected: !state.Select.isSelected,\r\n                },\r\n                Background: {\r\n                    ...state.Background,\r\n                    isBackgroundClicked: false,\r\n                },\r\n                Eraser: {\r\n                    ...state.Eraser,\r\n                    isEraserClicked: false,\r\n                },\r\n                Pen:{\r\n                    ...state.Pen,\r\n                    isPenClicked: false,\r\n                }\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst SidebarContext = React.createContext();\r\n\r\nfunction SidebarStateStore({children}){\r\n    const [state,dispatch] = useReducer(reducer,initialState);\r\n    const value = {\r\n        states: state,\r\n        handlePenClick:()=>{\r\n            dispatch({type: actions.PEN});\r\n        },\r\n        handleEraserClick:()=>{\r\n            dispatch({type:actions.ERASER});\r\n        },\r\n        handleBackgroundClick:()=>{\r\n            dispatch({type:actions.BACKGROUND});\r\n        },\r\n        handleSelection: ()=>{\r\n            dispatch({type:actions.SELECT});\r\n        }\r\n    };\r\n\r\n    return(\r\n        <SidebarContext.Provider value={value}>\r\n            {children}\r\n        </SidebarContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nexport default SidebarStateStore;\r\nexport {SidebarContext};","import './GooglyEye.css';\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {SidebarContext} from \"../model/SidebarStateStore\";\r\n\r\nfunction GooglyEye(){\r\n\r\n    const sidebarContext = useContext(SidebarContext);\r\n    const [eyePosition,setEyePosition]=useState({x: \"\", y:\"\"});\r\n\r\n    function handleMouseEvent(e){\r\n        setEyePosition({x:getX(e.clientX), y:getY(e.clientY)});\r\n    }\r\n\r\n    function handleContainerClick(){\r\n        if(sidebarContext.states.Select.isSelected){\r\n        }else {\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"mousemove\", handleMouseEvent);\r\n        return () => {\r\n            window.removeEventListener(\"mousemove\", handleMouseEvent);\r\n        }\r\n    },[]);\r\n\r\n    function getX(clientX) {\r\n        if ((clientX * 100 / window.innerWidth) < 20) {\r\n            return 20 + \"%\";\r\n        } else if ((clientX * 100 / window.innerWidth) > 80) {\r\n            return 80 + \"%\";\r\n        } else {\r\n            return clientX * 100 / window.innerWidth + '%';\r\n        }\r\n    }\r\n\r\n    function getY(clientY) {\r\n        if ((clientY * 100 / window.innerHeight) < 20) {\r\n            return 20 + \"%\";\r\n        } else if ((clientY * 100 / window.innerHeight) > 80) {\r\n            return 80 + \"%\";\r\n        } else {\r\n            return clientY * 100 / window.innerHeight + '%';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\"container-box\"} onClick={handleContainerClick}>\r\n            <div className=\"Eye-ball\" >\r\n                <div className=\"Irs\" style= {{ left: eyePosition.x, top: eyePosition.y }}>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default GooglyEye;\r\n","\r\nclass CanvasViewModel{\r\n\r\n    static penDraw = false;\r\n    static canvas = null;\r\n    static isDrawing = false;\r\n\r\n    constructor(canvas) {\r\n        CanvasViewModel.canvas = canvas;\r\n    }\r\n\r\n    handleMouseMoves({nativeEvent}){\r\n        if(CanvasViewModel.penDraw && CanvasViewModel.isDrawing) {\r\n            CanvasViewModel.canvas.lineTo(nativeEvent.offsetX, nativeEvent.offsetY);\r\n            CanvasViewModel.canvas.stroke();\r\n        }\r\n    }\r\n\r\n    handleMouseDown({nativeEvent}){\r\n        if(CanvasViewModel.penDraw) {\r\n            console.log(\"Down\");\r\n            CanvasViewModel.isDrawing = true;\r\n            CanvasViewModel.canvas.beginPath();\r\n            CanvasViewModel.canvas.moveTo(nativeEvent.offsetX, nativeEvent.offsetY);\r\n        }\r\n    }\r\n\r\n    handleMouseUp({nativeEvent}){\r\n        if(CanvasViewModel.penDraw) {\r\n            console.log(\"Up\");\r\n            CanvasViewModel.isDrawing = false;\r\n            CanvasViewModel.canvas.closePath();\r\n        }\r\n    }\r\n\r\n    set setCanvas(canvas){\r\n        CanvasViewModel.canvas = canvas;\r\n    }\r\n\r\n    get getCanvas(){\r\n        return CanvasViewModel.canvas;\r\n    }\r\n\r\n    startDrawing(value){\r\n        CanvasViewModel.penDraw = value;\r\n    }\r\n\r\n    stopDrawing(value){\r\n        CanvasViewModel.penDraw = value;\r\n    }\r\n\r\n\r\n    initEraser(value){\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CanvasViewModel;","import CanvasViewModel from \"./CanvasViewModel\";\r\n\r\nclass PenViewModel{\r\n\r\n    context = null;\r\n    canvasViewModel = null;\r\n\r\n    constructor(context,canvasViewModel) {\r\n        this.context = context;\r\n        this.canvasViewModel = canvasViewModel;\r\n    }\r\n\r\n    handlePenClick(){\r\n        this.context.handlePenClick();\r\n    }\r\n\r\n    getPenClick(){\r\n        return this.context.states.Pen.isPenClicked;\r\n    }\r\n\r\n    defaultPenProperties(){\r\n        this.setPenProperties(\"black\",0.7,\"round\");\r\n    }\r\n\r\n    setPenProperties(stroke,width,cap){\r\n        const canvas = CanvasViewModel.canvas;\r\n        if(canvas==null) {\r\n            console.log(\"Canvas not initialized\");\r\n            return;\r\n        }\r\n        canvas.strokeStyle = stroke;\r\n        canvas.width = width;\r\n        canvas.cap = cap;\r\n    }\r\n\r\n    startDrawing(){\r\n        this.defaultPenProperties();\r\n        this.canvasViewModel.startDrawing(this.getPenClick());\r\n    }\r\n\r\n    stopDrawing(){\r\n        this.canvasViewModel.stopDrawing(this.getPenClick());\r\n    }\r\n}\r\n\r\nexport default PenViewModel;","import {IconContext} from \"react-icons\";\r\nimport {BsPen, BsPenFill} from \"react-icons/bs\";\r\nimport {useContext} from \"react\";\r\nimport PenViewModel from \"../viewmodel/PenViewModel\"\r\nimport {SidebarContext} from \"../model/SidebarStateStore\";\r\n\r\nfunction Pen({canvasViewModel}){\r\n    //TODO Optimise the re-rendering of context\r\n    const sidebarContext = useContext(SidebarContext);\r\n    const penViewModel = new PenViewModel(sidebarContext,canvasViewModel);\r\n\r\n    function handleClick(){\r\n        penViewModel.handlePenClick();\r\n    }\r\n\r\n    function setDisplayIcon(){\r\n        if(penViewModel.getPenClick()){\r\n            penViewModel.startDrawing();\r\n            return <BsPenFill/>\r\n        } else {\r\n            penViewModel.stopDrawing();\r\n            return <BsPen/>\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <IconContext.Provider value={{title: \"Pen\", size: \"2.3em\", className: 'react-icons'}}>\r\n                <button onClick={handleClick}>{setDisplayIcon()}</button>\r\n            </IconContext.Provider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pen;","\r\nclass EraserViewModel{\r\n\r\n    context = null;\r\n    canvasViewModel = null;\r\n\r\n    constructor(context,canvasViewModel) {\r\n        this.context = context;\r\n        this.canvasViewModel = canvasViewModel;\r\n    }\r\n\r\n    handleEraserClick(){\r\n        this.context.handleEraserClick();\r\n    }\r\n\r\n    getEraserClick(){\r\n        return this.context.states.Eraser.isEraserClicked;\r\n    }\r\n}\r\n\r\nexport default EraserViewModel;","import {SidebarContext} from \"../model/SidebarStateStore\";\r\nimport {useContext} from \"react\";\r\nimport {RiEraserLine, RiEraserFill} from 'react-icons/ri';\r\nimport {IconContext} from \"react-icons\";\r\nimport EraserViewModel from \"../viewmodel/EraserViewModel\";\r\n\r\n\r\nfunction Eraser({canvasViewModel}){\r\n    //TODO Optimise the re-rendering of context\r\n    const sidebarContext = useContext(SidebarContext)\r\n    const eraserViewModel = new EraserViewModel(sidebarContext,canvasViewModel);\r\n\r\n    function handleClick(){\r\n        eraserViewModel.handleEraserClick();\r\n    }\r\n\r\n    function setDisplayIcon(){\r\n        if(eraserViewModel.getEraserClick()) {\r\n            return <RiEraserFill />\r\n        }\r\n        else {\r\n            return <RiEraserLine />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IconContext.Provider value={{size: \"2.3em\", className: 'react-icons'}}>\r\n                <button onClick={handleClick}>{setDisplayIcon()}</button>\r\n            </IconContext.Provider>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Eraser;","\r\nclass BackgroundViewModel{\r\n\r\n    context = null;\r\n    canvasViewModel = null;\r\n\r\n    constructor(context,canvasViewModel) {\r\n        this.context = context;\r\n        this.canvasViewModel = canvasViewModel;\r\n    }\r\n\r\n    handleIconClick(){\r\n        this.context.handleBackgroundClick();\r\n    }\r\n\r\n    getIconClick(){\r\n        return this.context.states.Background.isBackgroundClicked;\r\n    }\r\n\r\n    addBackground(){\r\n\r\n    }\r\n}\r\n\r\nexport default BackgroundViewModel;","import {useContext} from \"react\";\r\nimport {IconContext} from \"react-icons\";\r\nimport BackgroundViewModel from \"../viewmodel/BackgroundViewModel\";\r\nimport {SidebarContext} from \"../model/SidebarStateStore\";\r\nimport {BsImage, BsImageFill} from \"react-icons/all\";\r\nimport penViewModel from \"../viewmodel/PenViewModel\";\r\n\r\n\r\nconst Background = ({canvasViewModel}) => {\r\n\r\n    // const [image, setImage] = useState(() => {\r\n    //     const image = new Image();\r\n    //     image.src = beach;\r\n    //     return image;\r\n    // });\r\n    // const image = new Image(0,0);\r\n    // image.src = beach;\r\n    // window.onload =()=>{\r\n    //     if(image.src.length!=0)\r\n    //         canvasContent.current.drawImage(image,0,0,);\r\n    //     else\r\n    //         console.log(\"ok\")\r\n    // }\r\n\r\n    // function handleImage() {\r\n    //     setImage(image => {\r\n    //         console.log(image);\r\n    //     });\r\n    // }\r\n    //\r\n    // useEffect(() => {\r\n    //     if(!image.complete){\r\n    //         image.onload = () =>{\r\n    //             canvasContent.current.drawImage(image, 0, 0, window.innerWidth, window.innerHeight);\r\n    //         }\r\n    //     }else{\r\n    //         canvasContent.current.drawImage(image, 0, 0, window.innerWidth, window.innerHeight);\r\n    //     }\r\n    // }, [image]);\r\n    const sidebarContext = useContext(SidebarContext);\r\n    const backgroundViewModel = new BackgroundViewModel(sidebarContext,canvasViewModel);\r\n\r\n    function handleClick(){\r\n        backgroundViewModel.handleIconClick();\r\n    }\r\n\r\n    function setDisplayIcon(){\r\n        if(backgroundViewModel.getIconClick()){\r\n            backgroundViewModel.addBackground();\r\n            return <BsImageFill />\r\n        } else {\r\n            return <BsImage />\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <IconContext.Provider value={{title: \"Pen\", size: \"2.3em\", className: 'react-icons'}}>\r\n                <button onClick={handleClick}>{setDisplayIcon()}</button>\r\n            </IconContext.Provider>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Background;","\r\nclass SelectionViewModel{\r\n\r\n    context = null;\r\n    canvasViewModel = null;\r\n\r\n    constructor(context,canvasViewModel) {\r\n        this.context = context;\r\n        this.canvasViewModel = canvasViewModel;\r\n    }\r\n\r\n    handleIconClick(){\r\n       this.context.handleSelection();\r\n    }\r\n\r\n    getIconClick(){\r\n      return this.context.states.Select.isSelected;\r\n    }\r\n\r\n    addBackground(){\r\n\r\n    }\r\n}\r\n\r\nexport default SelectionViewModel;","import {IconContext} from \"react-icons\";\r\nimport {useContext} from \"react\";\r\nimport {SidebarContext} from \"../model/SidebarStateStore\";\r\nimport {GiArrowCursor, GrCursor} from \"react-icons/all\";\r\nimport SelectionViewModel from \"../viewmodel/SelectionViewModel\";\r\n\r\nfunction Selection({canvasViewModel}){\r\n    //TODO Optimise the re-rendering of context\r\n    const sidebarContext = useContext(SidebarContext);\r\n    const selectViewModel = new SelectionViewModel(sidebarContext,canvasViewModel);\r\n\r\n    function handleClick(){\r\n        selectViewModel.handleIconClick();\r\n    }\r\n\r\n    function setDisplayIcon(){\r\n        if(selectViewModel.getIconClick()){\r\n            return <GiArrowCursor/>\r\n        } else {\r\n            return <GrCursor/>\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <IconContext.Provider value={{title: \"Pen\", size: \"2.3em\", className: 'react-icons'}}>\r\n                <button onClick={handleClick}>{setDisplayIcon()}</button>\r\n            </IconContext.Provider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Selection;","import \"./Sidebar.css\";\r\nimport Pen from \"./Pen\";\r\nimport Eraser from \"./Eraser\";\r\nimport Background from \"./Background\";\r\nimport Selection from \"./Selection\";\r\n\r\nconst Sidebar = ({canvasViewModel}) => {\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebar-container\">\r\n                <div className=\"sidebar-item\">\r\n                    <Pen canvasViewModel={canvasViewModel} />\r\n                </div>\r\n                <div className=\"sidebar-item\">\r\n                    <Eraser canvasViewModel={canvasViewModel} />\r\n                </div>\r\n                <div className=\"sidebar-item\">\r\n                    <Background canvasViewModel={canvasViewModel} />\r\n                </div>\r\n                <div className=\"sidebar-item\">\r\n                    <Selection canvasViewModel={canvasViewModel} />\r\n                </div>\r\n            </div>\r\n            <div className='collapse'>\r\n                <p>close</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import Title from \"./Title\";\r\nimport GooglyEye from \"./GooglyEye\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport SidebarStateStore from \"../model/SidebarStateStore\";\r\n\r\nfunction Layout({canvasViewModel}) {\r\n\r\n    // imageUrl={()=>{const image = new Image(); image.src=\"../assets/celebrations.jpg\"; return image }}4\r\n    return (\r\n        <>\r\n            <Title/>\r\n            <SidebarStateStore>\r\n                <GooglyEye/>\r\n                <Sidebar canvasViewModel={canvasViewModel}/>\r\n            </SidebarStateStore>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Layout;","import React, {useReducer} from \"react\";\r\n\r\nconst actions = {\r\n    GET_CANVAS: \"CANVAS\",\r\n}\r\n\r\nconst initState = {\r\n    Canvas:{\r\n        canvas: null,\r\n    }\r\n}\r\n\r\nfunction reducer(state,action){\r\n    switch (action.type){\r\n        case actions.GET_CANVAS:\r\n            if(state.Canvas.canvas!=null){\r\n                return {\r\n                    Canvas: {\r\n                        canvas: action.payload,\r\n                    }\r\n                };\r\n            }\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst CanvasContext = React.createContext();\r\n\r\nfunction CanvasStateStore({children}){\r\n    const [state,dispatch] = useReducer(reducer,initState);\r\n    const value={\r\n        state,\r\n        getCanvas:(canvas)=>{\r\n            dispatch({type: actions.GET_CANVAS, payload: canvas});\r\n        }\r\n    };\r\n\r\n    return (\r\n      <CanvasContext.Provider value={value}>\r\n          {children}\r\n      </CanvasContext.Provider>\r\n    );\r\n}\r\n\r\nexport default CanvasStateStore;\r\nexport {CanvasContext};","import React, {useCallback, useContext, useMemo, useRef, useState} from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport CanvasViewModel from \"../viewmodel/CanvasViewModel\";\r\nimport \"./App.css\"\r\nimport CanvasStateStore from \"../model/CanvasStateStore\";\r\n\r\nfunction App() {\r\n\r\n    const ref = useRef(null);\r\n    const [canvas,setCanvas]=useState(null);\r\n    const canvasViewModel = useMemo(()=>new CanvasViewModel(canvas),[canvas]);\r\n\r\n    console.log(\"creating\")\r\n\r\n    const canvasRef = useCallback((current)=>{\r\n        if(current!=null && ref.current!==current) {\r\n            console.log(\"Rendered\")\r\n            ref.current = current;\r\n            current.width = window.innerWidth;\r\n            current.height = window.innerHeight;\r\n            const context = current.getContext('2d');\r\n            setCanvas(context);\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <canvas\r\n                className=\"canvas\"\r\n                ref={canvasRef}\r\n                style={{position: \"absolute\" }}\r\n                onMouseMove={canvasViewModel.handleMouseMoves}\r\n                onMouseDown={canvasViewModel.handleMouseDown}\r\n                onMouseUp={canvasViewModel.handleMouseUp}\r\n            />\r\n            {(canvas!=null)\r\n                ?\r\n                <CanvasStateStore>\r\n                    <Layout canvasViewModel={canvasViewModel}/>\r\n                </CanvasStateStore>\r\n                :\r\n                <h1>Null</h1>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}